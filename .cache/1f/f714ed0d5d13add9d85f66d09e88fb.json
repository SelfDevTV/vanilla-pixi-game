{"id":"node_modules/@pixi/core/lib/shader/utils/index.mjs","dependencies":[{"name":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs.map","includedInParent":true,"mtime":1668010481966},{"name":"/project/vanilla-pixi-game/package.json","includedInParent":true,"mtime":1668010486849},{"name":"/project/vanilla-pixi-game/node_modules/@pixi/core/package.json","includedInParent":true,"mtime":1668010481966},{"name":"./compileShader.mjs","loc":{"line":1,"column":30,"index":30},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/compileShader.mjs"},{"name":"./logProgramError.mjs","loc":{"line":2,"column":32,"index":85},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/logProgramError.mjs"},{"name":"./defaultValue.mjs","loc":{"line":3,"column":29,"index":139},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/defaultValue.mjs"},{"name":"./getMaxFragmentPrecision.mjs","loc":{"line":4,"column":40,"index":201},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/getMaxFragmentPrecision.mjs"},{"name":"./setPrecision.mjs","loc":{"line":5,"column":29,"index":263},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/setPrecision.mjs"},{"name":"./mapSize.mjs","loc":{"line":6,"column":24,"index":309},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/mapSize.mjs"},{"name":"./mapType.mjs","loc":{"line":7,"column":24,"index":350},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/mapType.mjs"},{"name":"./generateUniformsSync.mjs","loc":{"line":8,"column":37,"index":404},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/generateUniformsSync.mjs"},{"name":"./uniformParsers.mjs","loc":{"line":9,"column":31,"index":465},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/uniformParsers.mjs"},{"name":"./getTestContext.mjs","loc":{"line":10,"column":31,"index":520},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/getTestContext.mjs"},{"name":"./checkMaxIfStatementsInShader.mjs","loc":{"line":11,"column":45,"index":589},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/checkMaxIfStatementsInShader.mjs"},{"name":"./unsafeEvalSupported.mjs","loc":{"line":12,"column":36,"index":663},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/index.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/shader/utils/unsafeEvalSupported.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"checkMaxIfStatementsInShader\", {\n  enumerable: true,\n  get: function () {\n    return _checkMaxIfStatementsInShader.checkMaxIfStatementsInShader;\n  }\n});\nObject.defineProperty(exports, \"compileShader\", {\n  enumerable: true,\n  get: function () {\n    return _compileShader.compileShader;\n  }\n});\nObject.defineProperty(exports, \"defaultValue\", {\n  enumerable: true,\n  get: function () {\n    return _defaultValue.defaultValue;\n  }\n});\nObject.defineProperty(exports, \"generateUniformsSync\", {\n  enumerable: true,\n  get: function () {\n    return _generateUniformsSync.generateUniformsSync;\n  }\n});\nObject.defineProperty(exports, \"getMaxFragmentPrecision\", {\n  enumerable: true,\n  get: function () {\n    return _getMaxFragmentPrecision.getMaxFragmentPrecision;\n  }\n});\nObject.defineProperty(exports, \"getTestContext\", {\n  enumerable: true,\n  get: function () {\n    return _getTestContext.getTestContext;\n  }\n});\nObject.defineProperty(exports, \"logProgramError\", {\n  enumerable: true,\n  get: function () {\n    return _logProgramError.logProgramError;\n  }\n});\nObject.defineProperty(exports, \"mapSize\", {\n  enumerable: true,\n  get: function () {\n    return _mapSize.mapSize;\n  }\n});\nObject.defineProperty(exports, \"mapType\", {\n  enumerable: true,\n  get: function () {\n    return _mapType.mapType;\n  }\n});\nObject.defineProperty(exports, \"setPrecision\", {\n  enumerable: true,\n  get: function () {\n    return _setPrecision.setPrecision;\n  }\n});\nObject.defineProperty(exports, \"uniformParsers\", {\n  enumerable: true,\n  get: function () {\n    return _uniformParsers.uniformParsers;\n  }\n});\nObject.defineProperty(exports, \"unsafeEvalSupported\", {\n  enumerable: true,\n  get: function () {\n    return _unsafeEvalSupported.unsafeEvalSupported;\n  }\n});\nvar _compileShader = require(\"./compileShader.mjs\");\nvar _logProgramError = require(\"./logProgramError.mjs\");\nvar _defaultValue = require(\"./defaultValue.mjs\");\nvar _getMaxFragmentPrecision = require(\"./getMaxFragmentPrecision.mjs\");\nvar _setPrecision = require(\"./setPrecision.mjs\");\nvar _mapSize = require(\"./mapSize.mjs\");\nvar _mapType = require(\"./mapType.mjs\");\nvar _generateUniformsSync = require(\"./generateUniformsSync.mjs\");\nvar _uniformParsers = require(\"./uniformParsers.mjs\");\nvar _getTestContext = require(\"./getTestContext.mjs\");\nvar _checkMaxIfStatementsInShader = require(\"./checkMaxIfStatementsInShader.mjs\");\nvar _unsafeEvalSupported = require(\"./unsafeEvalSupported.mjs\");"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"e42c20c33436f7ba830f3c85c80799c8","cacheData":{"env":{}}}