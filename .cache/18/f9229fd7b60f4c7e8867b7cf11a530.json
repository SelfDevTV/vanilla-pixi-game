{"id":"node_modules/@pixi/core/lib/autoDetectRenderer.mjs","dependencies":[{"name":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/autoDetectRenderer.mjs.map","includedInParent":true,"mtime":1668010481966},{"name":"/project/vanilla-pixi-game/package.json","includedInParent":true,"mtime":1668010486849},{"name":"/project/vanilla-pixi-game/node_modules/@pixi/core/package.json","includedInParent":true,"mtime":1668010481966},{"name":"@pixi/extensions","loc":{"line":1,"column":42,"index":42},"parent":"/project/vanilla-pixi-game/node_modules/@pixi/core/lib/autoDetectRenderer.mjs","resolved":"/project/vanilla-pixi-game/node_modules/@pixi/extensions/lib/index.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.autoDetectRenderer = autoDetectRenderer;\nvar _extensions = require(\"@pixi/extensions\");\nconst renderers = [];\n_extensions.extensions.handleByList(_extensions.ExtensionType.Renderer, renderers);\nfunction autoDetectRenderer(options) {\n  for (const RendererType of renderers) {\n    if (RendererType.test(options)) {\n      return new RendererType(options);\n    }\n  }\n  throw new Error(\"Unable to auto-detect a suitable renderer.\");\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":8,"column":6}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":8,"column":15}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":20,"column":51},"generated":{"line":8,"column":18}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":20,"column":52},"generated":{"line":8,"column":20}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":9,"column":22}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":9,"column":23}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":9,"column":35}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":9,"column":36}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":38},"generated":{"line":9,"column":61}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":38},"generated":{"line":9,"column":62}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":38},"generated":{"line":9,"column":70}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":48},"generated":{"line":9,"column":72}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":57},"generated":{"line":9,"column":81}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":22,"column":57},"generated":{"line":9,"column":82}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":10,"column":0}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":10,"column":9}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":10,"column":27}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":57,"column":67},"generated":{"line":10,"column":28}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":10,"column":35}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":10,"column":37}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":11,"column":2}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":11,"column":7}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":11,"column":13}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":11,"column":25}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":59,"column":31},"generated":{"line":11,"column":29}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":11,"column":38}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":11,"column":40}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":12},"generated":{"line":12,"column":4}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":12},"generated":{"line":12,"column":8}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":12},"generated":{"line":12,"column":20}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":25},"generated":{"line":12,"column":21}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":30},"generated":{"line":12,"column":25}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":30},"generated":{"line":12,"column":26}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":61,"column":37},"generated":{"line":12,"column":33}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":12,"column":34}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":12,"column":36}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":13,"column":6}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":13,"column":13}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":23},"generated":{"line":13,"column":17}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":23},"generated":{"line":13,"column":29}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":36},"generated":{"line":13,"column":30}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":43},"generated":{"line":13,"column":37}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":43},"generated":{"line":13,"column":38}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":63,"column":43},"generated":{"line":14,"column":4}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":15,"column":2}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":16,"column":2}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":16,"column":8}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":14},"generated":{"line":16,"column":12}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":14},"generated":{"line":16,"column":17}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":20},"generated":{"line":16,"column":18}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":64},"generated":{"line":16,"column":62}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":67,"column":64},"generated":{"line":16,"column":63}},{"source":"../src/autoDetectRenderer.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../src/autoDetectRenderer.ts":"import { extensions, ExtensionType } from '@pixi/extensions';\nimport type { ICanvas } from '@pixi/settings';\nimport type { IRenderer, IRendererOptions } from './IRenderer';\n\nexport interface IRendererOptionsAuto extends IRendererOptions\n{\n    forceCanvas?: boolean;\n}\n\nexport interface IRendererConstructor<VIEW extends ICanvas = ICanvas>\n{\n    test(options?: IRendererOptionsAuto): boolean;\n    new (options?: IRendererOptionsAuto): IRenderer<VIEW>;\n}\n\n/**\n * Collection of installed Renderers.\n * @ignore\n */\nconst renderers: IRendererConstructor<ICanvas>[] = [];\n\nextensions.handleByList(ExtensionType.Renderer, renderers);\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If WebGL is not supported by\n * the browser then this function will return a canvas renderer\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {object} [options] - The optional renderer parameters\n * @param {number} [options.width=800] - the width of the renderers view\n * @param {number} [options.height=600] - the height of the renderers view\n * @param {PIXI.ICanvas} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.useContextAlpha=true] - Pass-through value for canvas' context `alpha` property.\n *   If you want to set transparency, please use `backgroundAlpha`. This option is for cases where the\n *   canvas needs to be opaque, possibly for performance reasons on some older devices.\n * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n *   resolutions other than 1\n * @param {boolean} [options.antialias=false] - sets antialias\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *  need to call toDataUrl on the webgl context\n * @param {number|string} [options.backgroundColor=0x000000] - The background color of the rendered area\n *  (shown if not transparent). Also, accepts hex strings or color names (e.g., 'white').\n * @param {number|string} [options.background] - Alias for `options.backgroundColor`.\n * @param {number} [options.backgroundAlpha=1] - Value from 0 (fully transparent) to 1 (fully opaque).\n * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n *   not before the new render pass.\n * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the renderer.\n * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present, this\n *   option only is available when using **pixi.js-legacy** or **@pixi/canvas-renderer** modules, otherwise\n *   it is ignored.\n * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n *  for devices with dual graphics card **webgl only**\n * @param {boolean} [options.hello=false] - Logs renderer type and version.\n * @returns {PIXI.Renderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nexport function autoDetectRenderer<VIEW extends ICanvas = ICanvas>(options?: IRendererOptionsAuto): IRenderer<VIEW>\n{\n    for (const RendererType of renderers)\n    {\n        if (RendererType.test(options))\n        {\n            return new RendererType(options) as IRenderer<VIEW>;\n        }\n    }\n\n    throw new Error('Unable to auto-detect a suitable renderer.');\n}\n"},"lineCount":null}},"error":null,"hash":"4fc2a54ada501fa657af87c79b6e409b","cacheData":{"env":{}}}